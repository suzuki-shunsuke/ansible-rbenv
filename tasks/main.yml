---
# tasks file for rbenv
- name: ghq root
  shell: "{{ghq_executable}} root"
  register: ghq_root
  changed_when: false
- name: Clone rbenv and ruby-build repository
  ghq:
    executable: "{{ghq_executable}}"
    name: "{{item}}"
    update: yes
  with_items:
  - rbenv/rbenv
  - rbenv/ruby-build
- name: Check $RBENV_ROOT
  stat:
    path: "{{ rbenv_root }}"
  register: st
- name: Back up $RBENV_ROOT
  shell: "mv {{ rbenv_root }} {{ rbenv_root }}.{{ansible_date_time.date}}-{{ansible_date_time.hour}}-{{ansible_date_time.minute}}-{{ansible_date_time.second}}"
  when: st.stat.exists and not st.stat.islnk
- name: Make symbolic links
  file:
    src: "{{ghq_root.stdout}}/github.com/rbenv/rbenv"
    dest: "{{ rbenv_root }}"
    state: link
- name: mkdir $RBENV_ROOT/plugins
  file:
    path: "{{ rbenv_root }}/plugins"
    state: directory
- name: Check $RBENV_ROOT/plugins/ruby-build
  stat:
    path: "{{ rbenv_root }}/plugins/ruby-build"
  register: st
- name: Back up $RBENV_ROOT/plugins/ruby-build
  shell: "mv {{ rbenv_root }}/plugins/ruby-build {{ rbenv_root }}/plugins/ruby-build.{{ansible_date_time.date}}-{{ansible_date_time.hour}}-{{ansible_date_time.minute}}-{{ansible_date_time.second}}"
  when: st.stat.exists and not st.stat.islnk
- name: Make symbolic links
  file:
    src: "{{ghq_root.stdout}}/github.com/rbenv/ruby-build"
    dest: "{{ rbenv_root }}/plugins/ruby-build"
    state: link
- name: Notice
  debug:
    msg: "cd $RBENV_ROOT && src/configure && make -C src"
- name: Notice
  debug:
    msg: "Install rbenv install dependencies."
- name: Notice
  debug:
    msg: "export PATH=$RBENV_ROOT/bin:$PATH"
- name: Notice
  debug:
    msg: "eval \"$(rbenv init -)\""
